BlueYonderQuoteLambda:
  name: ${self:service}-BlueYonderQuote-${self:provider.stage}
  description: Blue Yonder Pricing Algorithm
  handler: pricingalgorithm/blueyonder/blueyonderquote/index.lambda_handler
  layers:
      - arn:aws:lambda:us-east-1:941617370469:layer:Blueyonder:1
  role: BlueYonderQuoteExecutionRole
  # logGroup: BlueYonderQuoteLogGroup
  package:
    patterns:
      - "!**/*"
      - "pricingalgorithm/blueyonder/blueyonderquote/**"
      - "pricingalgorithm/libs/**"
      - "pricingalgorithm/webservice/generate_rates.py"
      - "pricingalgorithm/webservice/generate_ratesv2.py"
  timeout: 60
  runtime: python3.9
  memorySize: 512
  reservedConcurrency: 1
  events:
    # - http:
    #     path: blueyonder/blueyonderquote
    #     method: post
    #     intergration: lambda
    #     cors: true
    - stream:
        type: dynamodb
        arn:
          Fn::GetAtt:
            - PricingAlgoDynamoDBTable
            - StreamArn
        batchSize: 1
        startingPosition: TRIM_HORIZON
        enabled: true
        maximumRetryAttempts: 0
        filterPatterns:
          - { dynamodb: { NewImage: { NewQuote: { S: ['Yes'] } } } }
  environment:
    APPLICATION: ${self:custom.application}
    ENVIRONMENT: ${self:provider.stage}
    PRICING_ALGO_DB_TABLE: !Ref PricingAlgoDynamoDBTable
    IMMUTABLE_ARCHIVE: ${self:custom.application}-${self:provider.stage}-${self:service}-PricingAlgoArchive
    GREENSCREENS_SECRET: /app/${self:custom.application}/${self:provider.stage}/${self:service}/greenscreens-secret
    DAT_SECRET: /app/${self:custom.application}/${self:provider.stage}/${self:service}/dat-secret
    GOOGLE_API_SECRET: /app/${self:custom.application}/${self:provider.stage}/${self:service}/google-api-secret
    FUEL_API_SECRET: /app/${self:custom.application}/${self:provider.stage}/${self:service}/fuel-api-secret
    BLUE_YONDER_SECRETS: /app/pricing-algo/prod/pricing-algorithm/blue-yonder-secrets
  tags:
    Application: ${self:custom.application}
    Environment: ${self:provider.stage}
    DeployableUnitName: ${self:service}
    GitHubBranch: ${self:custom.GitHubBranch}
    TechnicalContact: ${self:custom.TechnicalContact}
